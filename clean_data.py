import nltk
import pickle
def load_dict():
    contraction_mapping = {"'cause": 'because',
                    ',cause': 'because',
                    ';cause': 'because',
                    "ain't": 'am not',
                    'ain,t': 'am not',
                    'ain;t': 'am not',
                    'ain´t': 'am not',
                    'ain’t': 'am not',
                    "aren't": 'are not',
                    'aren,t': 'are not',
                    'aren;t': 'are not',
                    'aren´t': 'are not',
                    'aren’t': 'are not',
                    "can't": 'cannot',
                    "can't've": 'cannot have',
                    'can,t': 'cannot',
                    'can,t,ve': 'cannot have',
                    'can;t': 'cannot',
                    'can;t;ve': 'cannot have',
                    'can´t': 'cannot',
                    'can´t´ve': 'cannot have',
                    'can’t': 'cannot',
                    'can’t’ve': 'cannot have',
                    "could've": 'could have',
                    'could,ve': 'could have',
                    'could;ve': 'could have',
                    "couldn't": 'could not',
                    "couldn't've": 'could not have',
                    'couldn,t': 'could not',
                    'couldn,t,ve': 'could not have',
                    'couldn;t': 'could not',
                    'couldn;t;ve': 'could not have',
                    'couldn´t': 'could not',
                    'couldn´t´ve': 'could not have',
                    'couldn’t': 'could not',
                    'couldn’t’ve': 'could not have',
                    'could´ve': 'could have',
                    'could’ve': 'could have',
                    "didn't": 'did not',
                    'didn,t': 'did not',
                    'didn;t': 'did not',
                    'didn´t': 'did not',
                    'didn’t': 'did not',
                    "doesn't": 'does not',
                    'doesn,t': 'does not',
                    'doesn;t': 'does not',
                    'doesn´t': 'does not',
                    'doesn’t': 'does not',
                    "don't": 'do not',
                    'don,t': 'do not',
                    'don;t': 'do not',
                    'don´t': 'do not',
                    'don’t': 'do not',
                    "hadn't": 'had not',
                    "hadn't've": 'had not have',
                    'hadn,t': 'had not',
                    'hadn,t,ve': 'had not have',
                    'hadn;t': 'had not',
                    'hadn;t;ve': 'had not have',
                    'hadn´t': 'had not',
                    'hadn´t´ve': 'had not have',
                    'hadn’t': 'had not',
                    'hadn’t’ve': 'had not have',
                    "hasn't": 'has not',
                    'hasn,t': 'has not',
                    'hasn;t': 'has not',
                    'hasn´t': 'has not',
                    'hasn’t': 'has not',
                    "haven't": 'have not',
                    'haven,t': 'have not',
                    'haven;t': 'have not',
                    'haven´t': 'have not',
                    'haven’t': 'have not',
                    "he'd": 'he would',
                    "he'd've": 'he would have',
                    "he'll": 'he will',
                    "he's": 'he is',
                    'he,d': 'he would',
                    'he,d,ve': 'he would have',
                    'he,ll': 'he will',
                    'he,s': 'he is',
                    'he;d': 'he would',
                    'he;d;ve': 'he would have',
                    'he;ll': 'he will',
                    'he;s': 'he is',
                    'he´d': 'he would',
                    'he´d´ve': 'he would have',
                    'he´ll': 'he will',
                    'he´s': 'he is',
                    'he’d': 'he would',
                    'he’d’ve': 'he would have',
                    'he’ll': 'he will',
                    'he’s': 'he is',
                    "how'd": 'how did',
                    "how'll": 'how will',
                    "how's": 'how is',
                    'how,d': 'how did',
                    'how,ll': 'how will',
                    'how,s': 'how is',
                    'how;d': 'how did',
                    'how;ll': 'how will',
                    'how;s': 'how is',
                    'how´d': 'how did',
                    'how´ll': 'how will',
                    'how´s': 'how is',
                    'how’d': 'how did',
                    'how’ll': 'how will',
                    'how’s': 'how is',
                    "i'd": 'i would',
                    "i'll": 'i will',
                    "i'm": 'i am',
                    "i've": 'i have',
                    'i,d': 'i would',
                    'i,ll': 'i will',
                    'i,m': 'i am',
                    'i,ve': 'i have',
                    'i;d': 'i would',
                    'i;ll': 'i will',
                    'i;m': 'i am',
                    'i;ve': 'i have',
                    "isn't": 'is not',
                    'isn,t': 'is not',
                    'isn;t': 'is not',
                    'isn´t': 'is not',
                    'isn’t': 'is not',
                    "it'd": 'it would',
                    "it'll": 'it will',
                    "it's": 'it is',
                    'it,d': 'it would',
                    'it,ll': 'it will',
                    'it,s': 'it is',
                    'it;d': 'it would',
                    'it;ll': 'it will',
                    'it;s': 'it is',
                    'it´d': 'it would',
                    'it´ll': 'it will',
                    'it´s': 'it is',
                    'it’d': 'it would',
                    'it’ll': 'it will',
                    'it’s': 'it is',
                    'i´d': 'i would',
                    'i´ll': 'i will',
                    'i´m': 'i am',
                    'i´ve': 'i have',
                    'i’d': 'i would',
                    'i’ll': 'i will',
                    'i’m': 'i am',
                    'i’ve': 'i have',
                    "let's": 'let us',
                    'let,s': 'let us',
                    'let;s': 'let us',
                    'let´s': 'let us',
                    'let’s': 'let us',
                    "ma'am": 'madam',
                    'ma,am': 'madam',
                    'ma;am': 'madam',
                    "mayn't": 'may not',
                    'mayn,t': 'may not',
                    'mayn;t': 'may not',
                    'mayn´t': 'may not',
                    'mayn’t': 'may not',
                    'ma´am': 'madam',
                    'ma’am': 'madam',
                    "might've": 'might have',
                    'might,ve': 'might have',
                    'might;ve': 'might have',
                    "mightn't": 'might not',
                    'mightn,t': 'might not',
                    'mightn;t': 'might not',
                    'mightn´t': 'might not',
                    'mightn’t': 'might not',
                    'might´ve': 'might have',
                    'might’ve': 'might have',
                    "must've": 'must have',
                    'must,ve': 'must have',
                    'must;ve': 'must have',
                    "mustn't": 'must not',
                    'mustn,t': 'must not',
                    'mustn;t': 'must not',
                    'mustn´t': 'must not',
                    'mustn’t': 'must not',
                    'must´ve': 'must have',
                    'must’ve': 'must have',
                    "needn't": 'need not',
                    'needn,t': 'need not',
                    'needn;t': 'need not',
                    'needn´t': 'need not',
                    'needn’t': 'need not',
                    "oughtn't": 'ought not',
                    'oughtn,t': 'ought not',
                    'oughtn;t': 'ought not',
                    'oughtn´t': 'ought not',
                    'oughtn’t': 'ought not',
                    "sha'n't": 'shall not',
                    'sha,n,t': 'shall not',
                    'sha;n;t': 'shall not',
                    "shan't": 'shall not',
                    'shan,t': 'shall not',
                    'shan;t': 'shall not',
                    'shan´t': 'shall not',
                    'shan’t': 'shall not',
                    'sha´n´t': 'shall not',
                    'sha’n’t': 'shall not',
                    "she'd": 'she would',
                    "she'll": 'she will',
                    "she's": 'she is',
                    'she,d': 'she would',
                    'she,ll': 'she will',
                    'she,s': 'she is',
                    'she;d': 'she would',
                    'she;ll': 'she will',
                    'she;s': 'she is',
                    'she´d': 'she would',
                    'she´ll': 'she will',
                    'she´s': 'she is',
                    'she’d': 'she would',
                    'she’ll': 'she will',
                    'she’s': 'she is',
                    "should've": 'should have',
                    'should,ve': 'should have',
                    'should;ve': 'should have',
                    "shouldn't": 'should not',
                    'shouldn,t': 'should not',
                    'shouldn;t': 'should not',
                    'shouldn´t': 'should not',
                    'shouldn’t': 'should not',
                    'should´ve': 'should have',
                    'should’ve': 'should have',
                    "that'd": 'that would',
                    "that's": 'that is',
                    'that,d': 'that would',
                    'that,s': 'that is',
                    'that;d': 'that would',
                    'that;s': 'that is',
                    'that´d': 'that would',
                    'that´s': 'that is',
                    'that’d': 'that would',
                    'that’s': 'that is',
                    "there'd": 'there had',
                    "there's": 'there is',
                    'there,d': 'there had',
                    'there,s': 'there is',
                    'there;d': 'there had',
                    'there;s': 'there is',
                    'there´d': 'there had',
                    'there´s': 'there is',
                    'there’d': 'there had',
                    'there’s': 'there is',
                    "they'd": 'they would',
                    "they'll": 'they will',
                    "they're": 'they are',
                    "they've": 'they have',
                    'they,d': 'they would',
                    'they,ll': 'they will',
                    'they,re': 'they are',
                    'they,ve': 'they have',
                    'they;d': 'they would',
                    'they;ll': 'they will',
                    'they;re': 'they are',
                    'they;ve': 'they have',
                    'they´d': 'they would',
                    'they´ll': 'they will',
                    'they´re': 'they are',
                    'they´ve': 'they have',
                    'they’d': 'they would',
                    'they’ll': 'they will',
                    'they’re': 'they are',
                    'they’ve': 'they have',
                    "wasn't": 'was not',
                    'wasn,t': 'was not',
                    'wasn;t': 'was not',
                    'wasn´t': 'was not',
                    'wasn’t': 'was not',
                    "we'd": 'we would',
                    "we'll": 'we will',
                    "we're": 'we are',
                    "we've": 'we have',
                    'we,d': 'we would',
                    'we,ll': 'we will',
                    'we,re': 'we are',
                    'we,ve': 'we have',
                    'we;d': 'we would',
                    'we;ll': 'we will',
                    'we;re': 'we are',
                    'we;ve': 'we have',
                    "weren't": 'were not',
                    'weren,t': 'were not',
                    'weren;t': 'were not',
                    'weren´t': 'were not',
                    'weren’t': 'were not',
                    'we´d': 'we would',
                    'we´ll': 'we will',
                    'we´re': 'we are',
                    'we´ve': 'we have',
                    'we’d': 'we would',
                    'we’ll': 'we will',
                    'we’re': 'we are',
                    'we’ve': 'we have',
                    "what'll": 'what will',
                    "what're": 'what are',
                    "what's": 'what is',
                    "what've": 'what have',
                    'what,ll': 'what will',
                    'what,re': 'what are',
                    'what,s': 'what is',
                    'what,ve': 'what have',
                    'what;ll': 'what will',
                    'what;re': 'what are',
                    'what;s': 'what is',
                    'what;ve': 'what have',
                    'what´ll': 'what will',
                    'what´re': 'what are',
                    'what´s': 'what is',
                    'what´ve': 'what have',
                    'what’ll': 'what will',
                    'what’re': 'what are',
                    'what’s': 'what is',
                    'what’ve': 'what have',
                    "where'd": 'where did',
                    "where's": 'where is',
                    'where,d': 'where did',
                    'where,s': 'where is',
                    'where;d': 'where did',
                    'where;s': 'where is',
                    'where´d': 'where did',
                    'where´s': 'where is',
                    'where’d': 'where did',
                    'where’s': 'where is',
                    "who'll": 'who will',
                    "who's": 'who is',
                    'who,ll': 'who will',
                    'who,s': 'who is',
                    'who;ll': 'who will',
                    'who;s': 'who is',
                    'who´ll': 'who will',
                    'who´s': 'who is',
                    'who’ll': 'who will',
                    'who’s': 'who is',
                    "won't": 'will not',
                    'won,t': 'will not',
                    'won;t': 'will not',
                    'won´t': 'will not',
                    'won’t': 'will not',
                    "wouldn't": 'would not',
                    'wouldn,t': 'would not',
                    'wouldn;t': 'would not',
                    'wouldn´t': 'would not',
                    'wouldn’t': 'would not',
                    "you'd": 'you would',
                    "you'll": 'you will',
                    "you're": 'you are',
                    'you,d': 'you would',
                    'you,ll': 'you will',
                    'you,re': 'you are',
                    'you;d': 'you would',
                    'you;ll': 'you will',
                    'you;re': 'you are',
                    'you´d': 'you would',
                    'you´ll': 'you will',
                    'you´re': 'you are',
                    'you’d': 'you would',
                    'you’ll': 'you will',
                    'you’re': 'you are',
                    '´cause': 'because',
                    '’cause': 'because',
                    "you've": "you have",
                    "could'nt": 'could not',
                    "havn't": 'have not',
                    "here’s": "here is",
                    'i""m': 'i am',
                    "i'am": 'i am',
                    "i'l": "i will",
                    "i'v": 'i have',
                    "wan't": 'want',
                    "was'nt": "was not",
                    "who'd": "who would",
                    "who're": "who are",
                    "who've": "who have",
                    "why'd": "why would",
                    "would've": "would have",
                    "y'all": "you all",
                    "y'know": "you know",
                    "you.i": "you i",
                    "your'e": "you are",
                    "arn't": "are not",
                    "agains't": "against",
                    "c'mon": "common",
                    "doens't": "does not",
                    'don""t': "do not",
                    "dosen't": "does not",
                    "dosn't": "does not",
                    "shoudn't": "should not",
                    "that'll": "that will",
                    "there'll": "there will",
                    "there're": "there are",
                    "this'll": "this all",
                    "u're": "you are",
                    "ya'll": "you all",
                    "you'r": "you are",
                    "you’ve": "you have",
                    "d'int": "did not",
                    "did'nt": "did not",
                    "din't": "did not",
                    "dont't": "do not",
                    "gov't": "government",
                    "i'ma": "i am",
                    "is'nt": "is not",'Congratulations to all!':'Congratulations to all!”'}
    punct = "/-'.,#$%\'()*+-/:;<=>@[\\]^_`{|}~" + '""“”’' + '∞θ÷α•à−β∅³π‘₹´°£€\×™√²—–&'
    punct_mapping = {"‘": "'", "₹": "e", "´": "'", "°": "", "€": "e", "™": "tm", "√": " sqrt ", "×": "x", "²": "2",
                     "—": "-", "–": "-", "’": "'", "_": "-", "`": "'", '“': '"', '”': '"', '“': '"', "£": "e",
                     '∞': 'infinity', 'θ': 'theta', '÷': '/', 'α': 'alpha', '•': '.', 'à': 'a', '−': '-', 'β': 'beta',
                     '∅': '', '³': '3', 'π': 'pi', }
    mispell_dict = {'735km': '735 km', 'colour': 'color', 'centre': 'center', 'favourite': 'favorite',
                    'travelling': 'traveling', 'counselling': 'counseling', 'theatre': 'theater',
                    'cancelled': 'canceled', 'labour': 'labor', 'organisation': 'organization', 'wwii': 'world war 2',
                    'citicise': 'criticize', 'youtu ': 'youtube ', 'Qoura': 'Quora', 'sallary': 'salary',
                    'Whta': 'What', 'narcisist': 'narcissist', 'howdo': 'how do', 'whatare': 'what are',
                    'howcan': 'how can', 'howmuch': 'how much', 'howmany': 'how many', 'whydo': 'why do', 'doI': 'do I',
                    'theBest': 'the best', 'howdoes': 'how does', 'mastrubation': 'masturbation',
                    'mastrubate': 'masturbate', "mastrubating": 'masturbating', 'pennis': 'penis',
                    'Etherium': 'Ethereum', 'narcissit': 'narcissist', 'bigdata': 'big data', '2k17': '2017',
                    '2k18': '2018', 'qouta': 'quota', 'exboyfriend': 'ex boyfriend', 'airhostess': 'air hostess',
                    "whst": 'what', 'watsapp': 'whatsapp', 'demonitisation': 'demonetization',
                    'demonitization': 'demonetization', 'demonetisation': 'demonetization', 'pokémon': 'pokemon'}
    return contraction_mapping, punct, punct_mapping, mispell_dict
def clean_special_chars(text, punct, mapping):
    for p in mapping:
        text = text.replace(p, mapping[p])

    for p in punct:
        text = text.replace(p, f' {p} ')

    specials = {'\u200b': '', '…': '', '\ufeff': '', 'करना': '', 'है': '',
                '©': ''}  # Other special characters that I have to deal with in last
    for s in specials:
        text = text.replace(s, specials[s])

    return text

def correct_spelling(x, dic):
    for word in dic.keys():
        x = x.replace(word, dic[word])
    return x
def clean_contractions(text, mapping):
    specials = ["’", "‘", "´", "`","``"]
    for s in specials:
        text = text.replace(s, "'")
    text = ' '.join([mapping[t] if t in mapping else t for t in text.split(" ")])
    return text
def clean(sentence_list):
    contraction_mapping, punct, punct_mapping, mispell_dict = load_dict()
    sentence_list = list(map(lambda x: x.lower(), sentence_list))
    sentence_list = list(map(lambda x: clean_contractions(x, contraction_mapping), sentence_list))
    sentence_list = list(map(lambda x: clean_special_chars(x, punct, punct_mapping), sentence_list))
    sentence_list = list(map(lambda x: correct_spelling(x, mispell_dict), sentence_list))
    sentence_list = list(map(lambda x: x.rstrip('\"'), sentence_list))

    return sentence_list

def build_missing_voc():
    # (propaganda-nonpropaganda)&dev_data
    with open('./models/raw_data.p', 'rb') as file:
        sentence_list, dev_sentence_list, label = pickle.load(file)
    npp=[]
    p=[]
    b = [nltk.word_tokenize(text.lower()) for text in dev_sentence_list]
    for s,l in zip(sentence_list,label):
        if l=='non-propaganda':
            npp.append(s)
        else:
            p.append(s)
    o = set()
    si = set()
    bb = set()
    for bbb in b:
        for i in bbb:
            bb.add(i)
    for pp in p:
        for ppp in nltk.word_tokenize(pp):
            o.add(ppp)
    for pp in npp:
        for ppp in nltk.word_tokenize(pp):
            si.add(ppp)
    print(len((o -si )&bb))
    with open('./models/vocab.p','wb') as file:
        voc =list((o - si)&bb)

        voc.sort()
        pickle.dump(voc,file)

        print(voc)
    return voc

